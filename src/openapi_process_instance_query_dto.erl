-module(openapi_process_instance_query_dto).

-export([encode/1]).

-export_type([openapi_process_instance_query_dto/0]).

-type openapi_process_instance_query_dto() ::
    #{ 'deploymentId' => binary(),
       'processDefinitionId' => binary(),
       'processDefinitionKey' => binary(),
       'processDefinitionKeyIn' => list(),
       'processDefinitionKeyNotIn' => list(),
       'businessKey' => binary(),
       'businessKeyLike' => binary(),
       'caseInstanceId' => binary(),
       'superProcessInstance' => binary(),
       'subProcessInstance' => binary(),
       'superCaseInstance' => binary(),
       'subCaseInstance' => binary(),
       'active' => boolean(),
       'suspended' => boolean(),
       'processInstanceIds' => list(),
       'withIncident' => boolean(),
       'incidentId' => binary(),
       'incidentType' => binary(),
       'incidentMessage' => binary(),
       'incidentMessageLike' => binary(),
       'tenantIdIn' => list(),
       'withoutTenantId' => boolean(),
       'processDefinitionWithoutTenantId' => boolean(),
       'activityIdIn' => list(),
       'rootProcessInstances' => boolean(),
       'leafProcessInstances' => boolean(),
       'variables' => list(),
       'variableNamesIgnoreCase' => boolean(),
       'variableValuesIgnoreCase' => boolean(),
       'orQueries' => list(),
       'sorting' => list()
     }.

encode(#{ 'deploymentId' := DeploymentId,
          'processDefinitionId' := ProcessDefinitionId,
          'processDefinitionKey' := ProcessDefinitionKey,
          'processDefinitionKeyIn' := ProcessDefinitionKeyIn,
          'processDefinitionKeyNotIn' := ProcessDefinitionKeyNotIn,
          'businessKey' := BusinessKey,
          'businessKeyLike' := BusinessKeyLike,
          'caseInstanceId' := CaseInstanceId,
          'superProcessInstance' := SuperProcessInstance,
          'subProcessInstance' := SubProcessInstance,
          'superCaseInstance' := SuperCaseInstance,
          'subCaseInstance' := SubCaseInstance,
          'active' := Active,
          'suspended' := Suspended,
          'processInstanceIds' := ProcessInstanceIds,
          'withIncident' := WithIncident,
          'incidentId' := IncidentId,
          'incidentType' := IncidentType,
          'incidentMessage' := IncidentMessage,
          'incidentMessageLike' := IncidentMessageLike,
          'tenantIdIn' := TenantIdIn,
          'withoutTenantId' := WithoutTenantId,
          'processDefinitionWithoutTenantId' := ProcessDefinitionWithoutTenantId,
          'activityIdIn' := ActivityIdIn,
          'rootProcessInstances' := RootProcessInstances,
          'leafProcessInstances' := LeafProcessInstances,
          'variables' := Variables,
          'variableNamesIgnoreCase' := VariableNamesIgnoreCase,
          'variableValuesIgnoreCase' := VariableValuesIgnoreCase,
          'orQueries' := OrQueries,
          'sorting' := Sorting
        }) ->
    #{ 'deploymentId' => DeploymentId,
       'processDefinitionId' => ProcessDefinitionId,
       'processDefinitionKey' => ProcessDefinitionKey,
       'processDefinitionKeyIn' => ProcessDefinitionKeyIn,
       'processDefinitionKeyNotIn' => ProcessDefinitionKeyNotIn,
       'businessKey' => BusinessKey,
       'businessKeyLike' => BusinessKeyLike,
       'caseInstanceId' => CaseInstanceId,
       'superProcessInstance' => SuperProcessInstance,
       'subProcessInstance' => SubProcessInstance,
       'superCaseInstance' => SuperCaseInstance,
       'subCaseInstance' => SubCaseInstance,
       'active' => Active,
       'suspended' => Suspended,
       'processInstanceIds' => ProcessInstanceIds,
       'withIncident' => WithIncident,
       'incidentId' => IncidentId,
       'incidentType' => IncidentType,
       'incidentMessage' => IncidentMessage,
       'incidentMessageLike' => IncidentMessageLike,
       'tenantIdIn' => TenantIdIn,
       'withoutTenantId' => WithoutTenantId,
       'processDefinitionWithoutTenantId' => ProcessDefinitionWithoutTenantId,
       'activityIdIn' => ActivityIdIn,
       'rootProcessInstances' => RootProcessInstances,
       'leafProcessInstances' => LeafProcessInstances,
       'variables' => Variables,
       'variableNamesIgnoreCase' => VariableNamesIgnoreCase,
       'variableValuesIgnoreCase' => VariableValuesIgnoreCase,
       'orQueries' => OrQueries,
       'sorting' => Sorting
     }.
